<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd 
           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
           http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd" >
    
	<context:annotation-config />
	<context:component-scan base-package="net.msyy" /><!-- 扫描业务逻辑层和模型层 -->
	
	<mvc:annotation-driven/>
	<task:annotation-driven/>  
	
	<context:annotation-config/>
    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
    <context:component-scan base-package="net.msyy.util"/>
	
	<!-- 数据源配置 -->
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<!--<property name="driverClassName" value="${jdbc.driver}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>-->
		<property name="driverClass" value="${jdbc.driverClass}" />
    <property name="jdbcUrl" value="${jdbc.jdbcUrl}" />
    <property name="user" value="${jdbc.user}" />
    <property name="password" value="${jdbc.password}" />
    <property name="minPoolSize" value="${jdbc.miniPoolSize}" />
    <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>  
    <property name="initialPoolSize" value="${jdbc.initialPoolSize}"/>
    <property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>
    <property name="acquireIncrement" value="${jdbc.acquireIncrement}"/>
   
    <property name="acquireRetryAttempts" value="${jdbc.acquireRetryAttempts}"/>
    <property name="acquireRetryDelay" value="${jdbc.acquireRetryDelay}"/>
    <property name="testConnectionOnCheckin" value="${jdbc.testConnectionOnCheckin}"/>
    <property name="automaticTestTable" value="${jdbc.automaticTestTable}"/>
    <property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}"/>
    <property name="checkoutTimeout" value="${jdbc.checkoutTimeout}"/>
	</bean>
	
	<!-- sessionFactory配置 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<!-- hibernate基本属性 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${jdbc.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.showsql}</prop>
                <prop key="hibernate.format_sql">${hibernate.formatsql}</prop>
			    <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
<!--			    <prop key="hibernate.current_session_context_class">jta</prop>-->
                <prop key="hibernate.current_session_context_class">${hibernate.current_session}</prop>
			</props>
		</property>
		<!-- 扫描实体类包 -->
		<property name="packagesToScan">
			<list>
				<value>net.msyy.model</value>
			</list>
		</property>
	</bean>
	
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	
	<!-- 打开事务声明 -->
	<tx:annotation-driven/>
	
	<!-- 配置事务的传播特性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" propagation="REQUIRED" read-only="false" />
			<tx:method name="*" propagation="SUPPORTS" read-only="true" />
		</tx:attributes>
	</tx:advice>
	
	<!-- 日志管理 -->
	<bean name="mylogadvice" class="net.msyy.aop.LogAdvice"></bean>
	<!-- 业务bean -->
	<bean name="myservice" class="net.msyy.service.impl.IAopMethodImpl"></bean>
	<!-- 将日志bean和业务bean通过代理方式进行整合 -->
	<bean name="aopmethod" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="interceptorNames">
			<list>
				<value>mylogadvice</value>
			</list>
		</property>
		<property name="target" ref="myservice"></property>
	</bean>
	
	<!-- 全局异常处理 -->
	<!--<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">/error/error.jsp</prop>
				<prop key="java.lang.Throwable">/error/error.jsp</prop>
			</props>
		</property>
		<property name="statusCodes">
			<props>
				<prop key="error/error">500</prop>
				<prop key="error/404">404</prop>
			</props>
		</property>
		<property name="warnLogCategory" value="WARN"></property>
		<property name="defaultErrorView" value="/error/error.jsp"></property>
		<property name="defaultStatusCode" value="500"></property>
	</bean>
	
	--><!-- 文件上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="1000000"></property>
		<property name="uploadTempDir" value="/pdf"></property>
	</bean>
	
	<!-- properties文件路径 -->
	<context:property-placeholder location="/WEB-INF/jdbc.properties" />
	
</beans>